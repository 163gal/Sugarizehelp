<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
	<head>
		<title>ActivitiesGuideSugar_es (en)</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<!--
		<link rel="alternate" type="application/rss+xml" title="RSS Feed" href="WebRss.html" />
		-->
		<link rel="icon" href="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/TWiki/FlossSkin2/fl2.ico" type="image/x-icon" /> <link rel="shortcut icon" href="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/TWiki/FlossSkin2/fl2.ico" type="image/x-icon" />
		<link rel=StyleSheet href="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/TWiki/FlossSkin2/typography.css" type="text/css" media="screen">
<style>
#index {
	 color:  #ff7f00;
	 font-family: trebuchet,sans-serif;
	 font-size: 10px;
	 line-height:11px;
}
#index UL {
	 width: 159px;
	 list-style-type: None;
	 padding-left: 0px;
	 border: 14px solid #ff7f00;
	 background-color: #ff7f00;
	 margin: 0px 0px 0px 0px;
  }
#index  LI {
	 padding-left: 0px;
	 padding-right: 10px;
	 padding-top: 4px;
	 padding-bottom: 4px;
	 color: #ffffff;
	 margin: 0px 0px 0px 0px;
	 background-color: #ff7f00;
	 border-top: 1px solid #ff7f00;
  }
#index LI:hover {
  background-color: #F99B1C;
}
#index  LI.heading {
	 background-color: #ff7f00;
	 color: #000000;
	 border-top:1px solid #FFE5CC;
	 padding-top: 7px;
	 font-weight: bold;
}
#index  LI.title {
	 border-bottom: 2px solid #FFE5CC;
	 background-color: #ff7f00;
	 color: #FBF4E9;
	 font-weight: bolder;
	 font-size:16px;
	 line-height:18px;
	 padding-bottom: 40px;
  }
#index A {
	 text-decoration: none;
	 color:  #FBF4E9;
	 font-weight: bold;
}
#ds-layout .imgcontainer {
	position:relative;
	}
#ds-layout .caption {
	position:relative;
	bottom:1;
	left:0;
	text-align:center;
	background:#ffe7cb;
	width:100%;
	opacity:.75;
	filter:alpha(opacity=85);
	color:#000;
	font-style: italic;
	 	font-size: 9px;
	line-height:11px;
	}
</style>
<script type="text/javascript">
function addLoadEvent(func) {
  var oldonload = window.onload;
  if (typeof window.onload != 'function') {
	 window.onload = func;
  } else {
	 window.onload = function() {
		oldonload();
		func();
	 }
  }
}

function insertAfter(newElement,targetElement) {
  var parent = targetElement.parentNode;
  if (parent.lastChild == targetElement) {
	 parent.appendChild(newElement);
  } else {
	 parent.insertBefore(newElement,targetElement.nextSibling);
  }
}

function captionizeImages() {
  if (!document.getElementsByTagName) return false;
  if (!document.createElement) return false;
  var images = document.getElementsByTagName("img");
  if (images.length < 1) return false; 
  for (var i=0; i<images.length; i++) {
	 if (images[i].className != "non") {
		var title = images[i].getAttribute("title");
		var width = images[i].width;
		var divCaption = document.createElement("div");
		divCaption.className="caption";
		divCaption.style.width=width+'px';
		if (title) divCaption.style.padding='2px 0px 3px 0px';
		divCaption.style.display='block';
		var divCaption_text = document.createTextNode(title);
		divCaption.appendChild(divCaption_text);
		var divContainer = document.createElement("div");
		divContainer.className="imgcontainer";
		if (title) divContainer.style.padding='0px 0px 10px 0px';
		images[i].parentNode.insertBefore(divContainer,images[i]);
		divContainer.appendChild(images[i]);
		insertAfter(divCaption,images[i]);
	 }
  }
}
//addLoadEvent(captionizeImages);
</script>
	</head>
	<body  background="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/TWiki/FlossSkin2/background.gif" style="margin:0;color:#000000;">
<div id="home" style="position:absolute;left:0px;top:10px;">
<a href="/"><img src="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/TWiki/FlossSkin2/top_read_back.gif" border="0"></a>
</div>
<div id="index" style="position:absolute;left:0px;top:150px;">
<ul>
<li class="title">HAGA LAS ACTIVIDADES</li><li class="heading">ACTIVIDADES DE SUGAR</li><li><a href="Introduction">INTRODUCCI”N</a></li><li><a href="WhatIsSugar">øQU… ES SUGAR?</a></li><li><a href="WhatisanActivity">øQU… ES UNA ACTIVIDAD DE SUGAR?</a></li><li><a href="NeedtoKnowWriteSugarActivity">øQU… NECESITO SABER PARA ESCRIBIR UNA ACTIVIDAD DE SUGAR?</a></li><li class="heading">PROGRAMACI”N</li><li><a href="SetUpDevEnvironment">PUESTA EN FUNCIONAMIENTO DE UN AMBIENTE DE DESARROLLO</a></li><li><a href="CreateFirstActivity">CREACI”N DE SU PRIMERA ACTIVIDAD</a></li><li><a href="StandalonePythonReadEtexts">UN PROGRAMA INDEPENDIENTE DE PYTHON PARA LEER ETEXTS</a></li><li><a href="InheritFromActivity">HEREDE DE SUGAR.ACTIVITY.ACTIVITY</a></li><li><a href="PackageTheActivity">PAQUETE DE LA ACTIVIDAD</a></li><li><a href="AddRefinements">AGREGUE LOS REFINAMIENTOS</a></li><li><a href="UsingVersionControl">AGREGUE SU C”DIGO DE LA ACTIVIDAD AL CONTROL DE VERSI”N</a></li><li><a href="GoingInternationalWithPootle">INTERNACIONALIZACI”N CON POOTLE</a></li><li><a href="DistributeYourActivity">DISTRIBUIR SU ACTIVIDAD</a></li><li><a href="SugarDebugging">DEPURACI”N DE ACTIVIDADES DE SUGAR</a></li><li class="heading">ASUNTOS AVANZADOS</li><li><a href="SugarCollaboration">CREANDO ACTIVIDADES COMPARTIDAS</a></li><li><a href="TextToSpeech">AGREGANDO TEXTO A VOZ</a></li><li><a href="FunWithTheJournal">DIVERSI”N CON EL DIARIO</a></li><li><a href="ActivitiesUsingPyGame">CREACI”N DE ACTIVIDADES USANDO PYGAME</a></li><li><a href="NewStyleToolbars">CREACI”N DE NUEVAS BARRAS DE HERRAMIENTAS DE ESTILO</a></li>
<li class="heading">TUTORIALES</li><li><a href="QueSeNecesita">øQU… SE NECESITA SABER?</a></li><li><a href="Tuto1">CREACI”N DE UNA ACTIVIDAD</a></li>
<li class="heading">AP…NDICE</li><li><a href="MoreReading">øAD”NDE IR DESDE AQUÕ?</a></li><li><a href="Glossary">GLOSSARIO</a></li><li><a href="AboutTheAuthors">ACERCA DE LOS AUTORES</a></li></ul>
</div>
<div id="pdf" style="position:absolute;left:13px;top:190px;">
<a href="/ActivitiesGuideSugar_es/FM_ActivitiesGuideSugar_es_03Nov10.pdf"><img class ="non" src="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/TWiki/FlossSkin2/makepdf.gif" border=0></a>
<a href="/ActivitiesGuideSugar_es/print"><img class="non" src="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/TWiki/FlossSkin2/viewprint.gif" border=0></a>
</div>
		<div style="position:absolute;left:240px;top:11px;">
		<table id="ds-layout" cellpadding="0" cellspacing="0" summary="" style="table-layout:fixed;width:670px;border: 5px solid #666666;padding-right: 0px;padding-left: 0px;padding-bottom: 0px;padding-top: 0px;margin-left : 10px;margin-top:10;background:#FFF7F0;">
			<tr>
			<td width=100%>
			<div class="ds-contentcontainer">
			<div style="margin-left:1.2em;">
			<br>
			<div class="huh" style='decoration:none;color:black;border:1;position:absolute;top:30px;left:500px;'>
			<a href='http://www.flossmanuals.net/bin/view/ActivitiesGuideSugar_es/AddRefinements' onClick="alert('You will now be forwarded to the FLOSS Manuals editing interface')"><b><font color=#ff7f00><small>Edit this page</small></font></b></a> :: <a href='http://www.flossmanuals.net/bin/view/ActivitiesGuideSugar_es/FMComments?skin=floss2'><b><font color=#ff7f00><small>Discussion</small></font></b></a>
			</div>
			<h1>Agregue los refinamientos
</h1>
<h2>Barras de herramientas
</h2>
<p>Es una verdad reconocida universal que una actividad de la primera tarifa necesita buenas barras de herramientas.&nbsp; En este cap√≠tulo aprenderemos c√≥mo hacerlas.&nbsp; Vamos a poner las clases de la barra de herramientas en un archivo separado del resto, porque hay dos estilos de la barra de herramientas (vieja y nueva) y podemos querer apoyar ambos en nuestra actividad.&nbsp; Si tenemos dos diversos archivos contener la barra de herramientas clasifica nuestro c√≥digo puede decidir en el tiempo de pasada cu√°l quiere utilizar.&nbsp; Para ahora, este c√≥digo apoya el viejo estilo, que trabaja con cada versi√≥n del az√∫car.&nbsp; El nuevo estilo es apoyado actualmente solamente por <em>Sugar en un palillo.</em>
</p>
<p>Hay un archivo llamado <strong>toolbar.py</strong> en el directorio de <strong>Add_Refinements del</strong> dep√≥sito de Git que parece esto:
  <br />
</p>
<pre>from gettext import gettext as _
import re

import pango
import gobject
import gtk

from sugar.graphics.toolbutton import ToolButton
from sugar.activity import activity

class ReadToolbar(gtk.Toolbar):
    __gtype_name__ = 'ReadToolbar'

    def __init__(self):
        gtk.Toolbar.__init__(self)

        self.back = ToolButton('go-previous')
        self.back.set_tooltip(_('Back'))
        self.back.props.sensitive = False
        self.insert(self.back, -1)
        self.back.show()

        self.forward = ToolButton('go-next')
        self.forward.set_tooltip(_('Forward'))
        self.forward.props.sensitive = False
        self.insert(self.forward, -1)
        self.forward.show()

        num_page_item = gtk.ToolItem()

        self.num_page_entry = gtk.Entry()
        self.num_page_entry.set_text('0')
        self.num_page_entry.set_alignment(1)
        self.num_page_entry.connect('insert-text',
                                     self.num_page_entry_insert_text_cb)

        self.num_page_entry.set_width_chars(4)

        num_page_item.add(self.num_page_entry)
        self.num_page_entry.show()

        self.insert(num_page_item, -1)
        num_page_item.show()

        total_page_item = gtk.ToolItem()

        self.total_page_label = gtk.Label()

        label_attributes = pango.AttrList()
        label_attributes.insert(pango.AttrSize(14000, 0, -1))
        label_attributes.insert(pango.AttrForeground(65535, 65535, 65535, 0, -1))
        self.total_page_label.set_attributes(label_attributes)

        self.total_page_label.set_text(' / 0')
        total_page_item.add(self.total_page_label)
        self.total_page_label.show()

        self.insert(total_page_item, -1)
        total_page_item.show()

    def num_page_entry_insert_text_cb(self, entry, text, length, position):
        if not re.match('[0-9]', text):
            entry.emit_stop_by_name('insert-text')
            return True
        return False

    def update_nav_buttons(self):
        current_page = self.current_page
        self.back.props.sensitive = current_page &gt; 0
        self.forward.props.sensitive = \
            current_page &lt; self.total_pages - 1

        self.num_page_entry.props.text = str(current_page + 1)
        self.total_page_label.props.label = \
            ' / ' + str(self.total_pages)

    def set_total_pages(self, pages):
        self.total_pages = pages

    def set_current_page(self, page):
        self.current_page = page
        self.update_nav_buttons()

class ViewToolbar(gtk.Toolbar):
    __gtype_name__ = 'ViewToolbar'

    __gsignals__ = {
        'needs-update-size': (gobject.SIGNAL_RUN_FIRST,
                              gobject.TYPE_NONE,
                              ([])),
        'go-fullscreen': (gobject.SIGNAL_RUN_FIRST,
                          gobject.TYPE_NONE,
                          ([]))
    }

    def __init__(self):
        gtk.Toolbar.__init__(self)
        self.zoom_out = ToolButton('zoom-out')
        self.zoom_out.set_tooltip(_('Zoom out'))
        self.insert(self.zoom_out, -1)
        self.zoom_out.show()

        self.zoom_in = ToolButton('zoom-in')
        self.zoom_in.set_tooltip(_('Zoom in'))
        self.insert(self.zoom_in, -1)
        self.zoom_in.show()

        spacer = gtk.SeparatorToolItem()
        spacer.props.draw = False
        self.insert(spacer, -1)
        spacer.show()

        self.fullscreen = ToolButton('view-fullscreen')
        self.fullscreen.set_tooltip(_('Fullscreen'))
        self.fullscreen.connect('clicked', self.fullscreen_cb)
        self.insert(self.fullscreen, -1)
        self.fullscreen.show()

    def fullscreen_cb(self, button):
        self.emit('go-fullscreen')
</pre>
<p>Otro archivo en el mismo directorio del dep√≥sito de Git se nombra <strong>ReadEtextsActivity2.py.</strong>&nbsp; Parece esto:
</p>
<pre>import os
import zipfile
import gtk
import pango
from sugar.activity import activity
from sugar.graphics import style
from toolbar import ReadToolbar, ViewToolbar
from gettext import gettext as _

page=0
PAGE_SIZE = 45
TOOLBAR_READ = 2

class ReadEtextsActivity(activity.Activity):
    def __init__(self, handle):
        "The entry point to the Activity"
        global page
        activity.Activity.__init__(self, handle)

        toolbox = activity.ActivityToolbox(self)
        activity_toolbar = toolbox.get_activity_toolbar()
        activity_toolbar.keep.props.visible = False
        activity_toolbar.share.props.visible = False

        self.edit_toolbar = activity.EditToolbar()
        self.edit_toolbar.undo.props.visible = False
        self.edit_toolbar.redo.props.visible = False
        self.edit_toolbar.separator.props.visible = False
        self.edit_toolbar.copy.set_sensitive(False)
        self.edit_toolbar.copy.connect('clicked', self.edit_toolbar_copy_cb)
        self.edit_toolbar.paste.props.visible = False
        toolbox.add_toolbar(_('Edit'), self.edit_toolbar)
        self.edit_toolbar.show()

        self.read_toolbar = ReadToolbar()
        toolbox.add_toolbar(_('Read'), self.read_toolbar)
        self.read_toolbar.back.connect('clicked', self.go_back_cb)
        self.read_toolbar.forward.connect('clicked', self.go_forward_cb)
        self.read_toolbar.num_page_entry.connect('activate', \
                                     self.num_page_entry_activate_cb)
        self.read_toolbar.show()

        self.view_toolbar = ViewToolbar()
        toolbox.add_toolbar(_('View'), self.view_toolbar)
        self.view_toolbar.connect('go-fullscreen',
                self.view_toolbar_go_fullscreen_cb)
        self.view_toolbar.zoom_in.connect('clicked', self.zoom_in_cb)
        self.view_toolbar.zoom_out.connect('clicked', self.zoom_out_cb)
        self.view_toolbar.show()

        self.set_toolbox(toolbox)
        toolbox.show()
        self.scrolled_window = gtk.ScrolledWindow()
        self.scrolled_window.set_policy(gtk.POLICY_NEVER, gtk.POLICY_AUTOMATIC)
        self.scrolled_window.props.shadow_type = gtk.SHADOW_NONE

        self.textview = gtk.TextView()
        self.textview.set_editable(False)
        self.textview.set_cursor_visible(False)
        self.textview.set_left_margin(50)
        self.textview.connect("key_press_event", self.keypress_cb)

        self.scrolled_window.add(self.textview)
        self.set_canvas(self.scrolled_window)
        self.textview.show()
        self.scrolled_window.show()
        page = 0
        self.clipboard = gtk.Clipboard(display=gtk.gdk.display_get_default(), \
                                       selection="CLIPBOARD")
        self.textview.grab_focus()
        self.font_desc = pango.FontDescription("sans %d" % style.zoom(10))
        self.textview.modify_font(self.font_desc)

        buffer = self.textview.get_buffer()
        self.markset_id = buffer.connect("mark-set", self.mark_set_cb)
        self.toolbox.set_current_toolbar(TOOLBAR_READ)

    def keypress_cb(self, widget, event):
        "Respond when the user presses one of the arrow keys"
        keyname = gtk.gdk.keyval_name(event.keyval)
        print keyname
        if keyname == 'plus':
            self.font_increase()
            return True
        if keyname == 'minus':
            self.font_decrease()
            return True
        if keyname == 'Page_Up' :
            self.page_previous()
            return True
        if keyname == 'Page_Down':
            self.page_next()
            return True
        if keyname == 'Up' or keyname == 'KP_Up' \
                or keyname == 'KP_Left':
            self.scroll_up()
            return True
        if keyname == 'Down' or keyname == 'KP_Down' \
                or keyname == 'KP_Right':
            self.scroll_down()
            return True
        return False

    def num_page_entry_activate_cb(self, entry):
        global page
        if entry.props.text:
            new_page = int(entry.props.text) - 1
        else:
            new_page = 0

        if new_page &gt;= self.read_toolbar.total_pages:
            new_page = self.read_toolbar.total_pages - 1
        elif new_page &lt; 0:
            new_page = 0

        self.read_toolbar.current_page = new_page
        self.read_toolbar.set_current_page(new_page)
        self.show_page(new_page)
        entry.props.text = str(new_page + 1)
        self.read_toolbar.update_nav_buttons()
        page = new_page

    def go_back_cb(self, button):
        self.page_previous()

    def go_forward_cb(self, button):
        self.page_next()

    def page_previous(self):
        global page
        page=page-1
        if page &lt; 0: page=0
        self.read_toolbar.set_current_page(page)
        self.show_page(page)
        v_adjustment = self.scrolled_window.get_vadjustment()
        v_adjustment.value = v_adjustment.upper - v_adjustment.page_size

    def page_next(self):
        global page
        page=page+1
        if page &gt;= len(self.page_index): page=0
        self.read_toolbar.set_current_page(page)
        self.show_page(page)
        v_adjustment = self.scrolled_window.get_vadjustment()
        v_adjustment.value = v_adjustment.lower

    def zoom_in_cb(self,  button):
        self.font_increase()

    def zoom_out_cb(self,  button):
        self.font_decrease()

    def font_decrease(self):
        font_size = self.font_desc.get_size() / 1024
        font_size = font_size - 1
        if font_size &lt; 1:
            font_size = 1
        self.font_desc.set_size(font_size * 1024)
        self.textview.modify_font(self.font_desc)

    def font_increase(self):
        font_size = self.font_desc.get_size() / 1024
        font_size = font_size + 1
        self.font_desc.set_size(font_size * 1024)
        self.textview.modify_font(self.font_desc)

    def mark_set_cb(self, textbuffer, iter, textmark):

        if textbuffer.get_has_selection():
            begin, end = textbuffer.get_selection_bounds()
            self.edit_toolbar.copy.set_sensitive(True)
        else:
            self.edit_toolbar.copy.set_sensitive(False)

    def edit_toolbar_copy_cb(self, button):
        textbuffer = self.textview.get_buffer()
        begin, end = textbuffer.get_selection_bounds()
        copy_text = textbuffer.get_text(begin, end)
        self.clipboard.set_text(copy_text)

    def view_toolbar_go_fullscreen_cb(self, view_toolbar):
        self.fullscreen()

    def scroll_down(self):
        v_adjustment = self.scrolled_window.get_vadjustment()
        if v_adjustment.value == v_adjustment.upper - \
                v_adjustment.page_size:
            self.page_next()
            return
        if v_adjustment.value &lt; v_adjustment.upper - \
                v_adjustment.page_size:
            new_value = v_adjustment.value + v_adjustment.step_increment
            if new_value &gt; v_adjustment.upper - v_adjustment.page_size:
                new_value = v_adjustment.upper - v_adjustment.page_size
            v_adjustment.value = new_value

    def scroll_up(self):
        v_adjustment = self.scrolled_window.get_vadjustment()
        if v_adjustment.value == v_adjustment.lower:
            self.page_previous()
            return
        if v_adjustment.value &gt; v_adjustment.lower:
            new_value = v_adjustment.value - \
                v_adjustment.step_increment
            if new_value &lt; v_adjustment.lower:
                new_value = v_adjustment.lower
            v_adjustment.value = new_value

    def show_page(self, page_number):
        global PAGE_SIZE, current_word
        position = self.page_index[page_number]
        self.etext_file.seek(position)
        linecount = 0
        label_text = '\n\n\n'
        textbuffer = self.textview.get_buffer()
        while linecount &lt; PAGE_SIZE:
            line = self.etext_file.readline()
            label_text = label_text + unicode(line, 'iso-8859-1')
            linecount = linecount + 1
        label_text = label_text + '\n\n\n'
        textbuffer.set_text(label_text)
        self.textview.set_buffer(textbuffer)

    def save_extracted_file(self, zipfile, filename):
        "Extract the file to a temp directory for viewing"
        filebytes = zipfile.read(filename)
        outfn = self.make_new_filename(filename)
        if (outfn == ''):
            return False
        f = open(os.path.join(self.get_activity_root(), 'tmp',  outfn),  'w')
        try:
            f.write(filebytes)
        finally:
            f.close()

    def get_saved_page_number(self):
        global page
        title = self.metadata.get('title', '')
        if title == ''  or not title[len(title)- 1].isdigit():
            page = 0
        else:
            i = len(title) - 1
            newPage = ''
            while (title[i].isdigit() and i &gt; 0):
                newPage = title[i] + newPage
                i = i - 1
            if title[i] == 'P':
                page = int(newPage) - 1
            else:
                # not a page number; maybe a volume number.
                page = 0

    def save_page_number(self):
        global page
        title = self.metadata.get('title', '')
        if title == ''  or not title[len(title)- 1].isdigit():
            title = title + ' P' +  str(page + 1)
        else:
            i = len(title) - 1
            while (title[i].isdigit() and i &gt; 0):
                i = i - 1
            if title[i] == 'P':
                title = title[0:i] + 'P' + str(page + 1)
            else:
                title = title + ' P' + str(page + 1)
        self.metadata['title'] = title

    def read_file(self, filename):
        "Read the Etext file"
        global PAGE_SIZE,  page

        if zipfile.is_zipfile(filename):
            self.zf = zipfile.ZipFile(filename, 'r')
            self.book_files = self.zf.namelist()
            self.save_extracted_file(self.zf, self.book_files[0])
            currentFileName = os.path.join(self.get_activity_root(), \
                    'tmp',  self.book_files[0])
        else:
            currentFileName = filename

        self.etext_file = open(currentFileName,"r")
        self.page_index = [ 0 ]
        pagecount = 0
        linecount = 0
        while self.etext_file:
            line = self.etext_file.readline()
            if not line:
                break
            linecount = linecount + 1
            if linecount &gt;= PAGE_SIZE:
                position = self.etext_file.tell()
                self.page_index.append(position)
                linecount = 0
                pagecount = pagecount + 1
        if filename.endswith(".zip"):
            os.remove(currentFileName)
        self.get_saved_page_number()
        self.show_page(page)
        self.read_toolbar.set_total_pages(pagecount + 1)
        self.read_toolbar.set_current_page(page)

    def make_new_filename(self, filename):
        partition_tuple = filename.rpartition('/')
        return partition_tuple[2]

    def write_file(self, filename):
        "Save meta data for the file."
        self.metadata['activity'] = self.get_bundle_id()
        self.save_page_number()
</pre>
<p>√âste es <strong>activity.info</strong> por este ejemplo:
</p>
<pre>[Activity]
name = Read ETexts II
service_name = net.flossmanuals.ReadEtextsActivity
icon = read-etexts
<strong>exec = sugar-activity ReadEtextsActivity2.ReadEtextsActivity</strong>
show_launcher = no
activity_version = 1
mime_types = text/plain;application/zip
license = GPLv2+
</pre>
<p>La l√≠nea en <strong>en negrilla</strong> es la √∫nica que necesita cambiar.&nbsp; Cuando funcionamos con esta nueva versi√≥n esto es lo que veremos:
</p>
<p><img alt="ReadEtexts_05.jpg" src="/floss_translate/publish/ActivitiesGuideSugar_es/rsrc/ActivitiesGuideSugar_es/AddRefinements/ReadEtexts_05_en.jpg" height="480" width="640" />
</p>
<p>Hay algunas cosas digno de el se√±alamiento en este c√≥digo.&nbsp; Primero, tenga una mirada en esta importaci√≥n:
</p>
<pre>from gettext import gettext as _
</pre>
<p> Utilizaremos el m√≥dulo del <em>gettext del</em> Python para apoyar traducir nuestra actividad en otras idiomas. La utilizaremos en declaraciones como √©sta:
</p>
<pre>        self.back.set_tooltip(_('Back'))</pre>
<p>La raya act√∫a la misma manera que la funci√≥n del gettext debido a la manera nosotros import√≥ el gettext.&nbsp;‚Åû El efecto de esta declaraci√≥n ser√° mirar en un archivo especial de la traducci√≥n para una palabra o una frase que emparejen la llave ‚Äútrasera‚Äù y la substituye por su traducci√≥n.&nbsp; Si no hay archivo de la traducci√≥n para la lengua la queremos entonces utilizaremos simplemente la palabra ‚Äútrasera‚Äù.&nbsp; Exploraremos la determinaci√≥n de estos archivos de la traducci√≥n m√°s adelante, pero para ahora usando el gettext para todas las palabras y frases demostraremos a nuestras endechas de los usuarios de la actividad una cierta base importante.
</p>
<p>La segunda cosa digno de el se√±alamiento es que mientras que nuestra actividad revisada tiene cuatro barras de herramientas tuvimos que crear solamente dos de ellos.&nbsp; Los otros dos, <strong>actividad</strong> y <strong>corrigen</strong>, son parte de la biblioteca del Python del az√∫car.&nbsp; Podemos utilizar esas barras de herramientas como es, oculte los controles que no necesitamos, o a√∫n ampl√≠elos agregando nuevos controles.&nbsp; En el ejemplo estamos ocultando la <strong>subsistencia</strong> y los controles de la <strong>parte de la</strong> barra de herramientas de la actividad y del <strong>deshacer</strong>, los botones <strong>hacen de nuevo</strong>, y de la <strong>goma de la</strong> barra de herramientas del corregir.&nbsp; No apoyamos actualmente la distribuci√≥n de los libros o la modificaci√≥n del texto en libros as√≠ que estos controles no son necesarios.&nbsp; Observe tambi√©n que la barra de herramientas de la actividad es parte del <strong>ActivityToolbox</strong>.&nbsp; No hay manera de dar a su actividad una caja de herramientas que no contenga la barra de herramientas de la actividad como su primera entrada.
</p>
<p>Otra cosa al aviso es que la clase de la actividad apenas no provee de nosotros una ventana.&nbsp; La ventana tiene un VBox para llevar a cabo nuestras barras de herramientas y el cuerpo de nuestra actividad.&nbsp; Instalamos la caja de herramientas usando <em>set_toolbox()</em> y el cuerpo de la actividad usando <em>set_canvas()</em>.
</p>
<p>Las barras de herramientas <strong>le√≠da</strong> y de la <strong>visi√≥n</strong> son PyGtk regular que programa, pero notan que hay un bot√≥n especial para las barras de herramientas del az√∫car que pueden tener un tooltip atado a √©l, m√°s la barra de herramientas de la <strong>visi√≥n</strong> tiene c√≥digo para ocultar la caja de herramientas y <strong>ReadEtextsActivity2</strong> tiene c√≥digo al unhide √©l.&nbsp; Esto es una funci√≥n f√°cil a agregar a sus propias Actividades y muchos juegos y otras clases de Actividades pueden beneficiarse del √°rea de pantalla creciente que usted consigue cuando usted oculta la caja de herramientas.
</p>
<h2>Meta datos y entradas de diario
  <br />
</h2>
<p>Cada entrada de diario representa un solo archivo m√°s <strong>meta datos</strong>, o la informaci√≥n que describe el archivo.&nbsp; Hay las entradas est√°ndar de los meta datos que todas las entradas de diario tienen y usted puede tambi√©n crear sus propios meta datos de encargo.
</p>
<p> Desemejante de ReadEtextsActivity, esta versi√≥n tiene <em>un</em> m√©todo <em>write_file()</em>.
</p>
<pre>    def write_file(self, filename):
        "Save meta data for the file."
        self.metadata['activity'] = self.get_bundle_id()
        self.save_page_number()
</pre>
<p> No ten√≠amos <em>() un</em> m√©todo <em>write_file</em> antes porque no √≠bamos a poner al d√≠a el archivo que el libro est√° adentro, y todav√≠a no estamos.&nbsp; , Sin embargo, pondremos al d√≠a los meta datos para la entrada de diario.&nbsp; Espec√≠ficamente, haremos dos cosas:
</p>
<ul>
  <li>Excepto la p√°gina nuestro usuario de la actividad par√≥ el leer en tan de cuando √©l pone en marcha la actividad que podemos volver otra vez a esa p√°gina.</li>
  <li>Diga a entrada de diario que pertenece a nuestra actividad, de modo que en el futuro utilice el icono de nuestra actividad y pueda poner en marcha nuestra actividad con un tecleo.</li>
</ul>
<p>La manera que la actividad <strong>le√≠da</strong> ahorra p√°gina es utilizar una caracter√≠stica de encargo de los meta datos.&nbsp;
</p>
<pre>            self.metadata['Read_current_page'] = \
                        str(self._document.get_page_cache().get_current_page())
</pre>
<p><strong>Read</strong> crea una caracter√≠stica de encargo de los meta datos nombrada <em>Read_current_page</em> para almacenar la p√°gina actual.&nbsp; Usted puede crear cualquier n√∫mero de caracter√≠sticas de encargo de los meta datos apenas esto f√°cilmente, as√≠ que usted puede preguntarse porqu√© no estamos haciendo eso con <strong>Read Etexts</strong>.&nbsp; Realmente, la primera versi√≥n de <strong>Read Etexts</strong> utiliz√≥ una caracter√≠stica de encargo, pero en el az√∫car .82 o bajar all√≠ era un insecto en el diario tales que los meta datos de encargo no sobrevivieron despu√©s de que la computadora fuera apagada.&nbsp; Consecuentemente mi actividad recordar√≠a p√°ginas mientras que la computadora funcionaba, pero las olvidar√≠a tan pronto como fuera cerrada.&nbsp; Los ordenadores port√°tiles de XO no pueden aumentar actualmente cualquier cosa m√°s nuevamente de .82, y cuando es posible aumentar ser√° un trabajo grande para las escuelas.
</p>
<p>Para conseguir alrededor de este problema cre√© los dos m√©todos siguientes:
  <br />
</p>
<pre>    def get_saved_page_number(self):
        global page
        title = self.metadata.get('title', '')
        if title == ''  or not title[len(title)- 1].isdigit():
            page = 0
        else:
            i = len(title) - 1
            newPage = ''
            while (title[i].isdigit() and i &gt; 0):
                newPage = title[i] + newPage
                i = i - 1
            if title[i] == 'P':
                page = int(newPage) - 1
            else:
                # not a page number; maybe a volume number.
                page = 0

    def save_page_number(self):
        global page
        title = self.metadata.get('title', '')
        if title == ''  or not title[len(title)- 1].isdigit():
            title = title + ' P' +  str(page + 1)
        else:
            i = len(title) - 1
            while (title[i].isdigit() and i &gt; 0):
                i = i - 1
            if title[i] == 'P':
                title = title[0:i] + 'P' + str(page + 1)
            else:
                title = title + ' P' + str(page + 1)
        self.metadata['title'] = title
</pre>
<p> <em>el save_page_number ()</em> mira los meta datos actuales y cualquiera del t√≠tulo agrega una p√°gina al extremo de √©l o pone al d√≠a la p√°gina ya all√≠.&nbsp; Puesto que el t√≠tulo es meta datos est√°ndar para todas las entradas de diario el insecto del diario no le afecta.
</p>
<p>Estos ejemplos demuestran c√≥mo leer meta datos tambi√©n. &nbsp;
  <br />
</p>
<pre>        title = self.metadata.get('title', '')
</pre>
<p> Esta l√≠nea de c√≥digo dice que ‚Äúconsiga la caracter√≠stica de los meta datos nombrada <em>t√≠tulo</em> y que p√≥ngala en el <em>t√≠tulo</em> nombrado variable, si no hay caracter√≠stica del t√≠tulo pone una secuencia vac√≠a en <em>t√≠tulo</em>.
</p>
<p>Usted ahorrar√° meta datos en <em>() el</em> m√©todo <em>write_file</em> y los leer√° generalmente en <em>() el</em> m√©todo <em>read_file</em>.
</p>
<p>En una actividad normal que pone un archivo en escrito en write_file () esta l√≠nea siguiente ser√≠a innecesaria:
</p>
<p>
</p>
<pre>        self.metadata['activity'] = self.get_bundle_id()
</pre>
<p> Cualquier entrada de diario creada por una actividad tendr√° autom√°ticamente esta caracter√≠stica fijada. En el caso de <em>orgullo y de prejudicar</em>, nuestra actividad no lo cre√≥.&nbsp; Podemos leerla porque nuestra actividad apoya su <em>tipo del MIME</em>.&nbsp; Desafortunadamente, ese tipo del MIME, <em>uso/cierre rel√°mpago</em>, es utilizado por otras Actividades.&nbsp; Lo encontr√© muy que frustraba para querer abrir un libro en <strong>Read Etexts</strong> y accidentalmente hacerlo abrir en <strong>EToys</strong> en lugar de otro.&nbsp; Esta l√≠nea de c√≥digo soluciona ese problema.&nbsp; Usted necesita solamente utilizar <em>comienzo usando‚Ä¶</em> la primera vez que usted lee un libro.&nbsp; Despu√©s que el libro utilizar√° el icono <strong>Read Etexts</strong> y se puede reasumir con un solo tecleo.
</p>
<p>Esto afecta en absoluto al tipo del MIME de la entrada de diario, as√≠ que si usted quiso abrir deliberadamente <em>orgullo y prejudicar</em> con <strong>Etoys</strong> √©l es todav√≠a posible.
</p>
<p>Antes de que nos vayamos el tema de los meta datos del diario nos dej√≥ mirar todos los meta datos est√°ndar que cada actividad tiene.&nbsp; Aqu√≠ est√° un cierto c√≥digo que crea una nueva entrada de diario y pone al d√≠a un manojo de caracter√≠sticas est√°ndar:
</p>
<pre>    def create_journal_entry(self,  tempfile):
        journal_entry = datastore.create()
        journal_title = self.selected_title
        if self.selected_volume != '':
            journal_title +=  ' ' + _('Volume') + ' ' +  self.selected_volume
        if self.selected_author != '':
            journal_title = journal_title  + ', by ' + self.selected_author
        journal_entry.metadata['title'] = journal_title
        journal_entry.metadata['title_set_by_user'] = '1'
        journal_entry.metadata['keep'] = '0'
        format = self._books_toolbar.format_combo.props.value
        if format == '.djvu':
            journal_entry.metadata['mime_type'] = 'image/vnd.djvu'
        if format == '.pdf' or format == '_bw.pdf':
            journal_entry.metadata['mime_type'] = 'application/pdf'
        journal_entry.metadata['buddies'] = ''
        journal_entry.metadata['preview'] = ''
        journal_entry.metadata['icon-color'] = profile.get_color().to_string()
        textbuffer = self.textview.get_buffer()
        journal_entry.metadata['description'] = \
            textbuffer.get_text(textbuffer.get_start_iter(), \
            textbuffer.get_end_iter())
        journal_entry.file_path = tempfile
        datastore.write(journal_entry)
        os.remove(tempfile)
        self._alert(_('Success'), self.selected_title + _(' added to Journal.'))
</pre>
<p>Este c√≥digo se toma de una actividad que escrib√≠ que las transferencias directas reservan de un Web site y crean las entradas de diario para ellas.&nbsp; Las entradas de diario contienen un t√≠tulo amistoso y una descripci√≥n completa del libro.
</p>
<p>La mayor√≠a de las Actividades se ocupar√°n solamente de una entrada de diario usando <em>los</em> m√©todos <em>read_file()</em> y <em>write_file()</em> pero le no limitan a √©se.&nbsp; En un cap√≠tulo posterior le demostrar√© c√≥mo crear y suprimir entradas de diario, c√≥mo enumerar el contenido del diario, y m√°s.
  <br />
</p>Hemos cubierto mucha informaci√≥n t√©cnica en este cap√≠tulo y hay m√°s a venir, pero antes de que consigamos a √©se necesitamos mirar algunos otros asuntos importantes:
<ul>
  <li>Poner su actividad en control de versi√≥n.&nbsp; Esto le permitir√° compartir su c√≥digo con el mundo y conseguir a la otra gente ayudar a trabajar en √©l.</li>
  <li>Consiguiendo su actividad traducida a otras idiomas.</li>
  <li>Distribuci√≥n de su actividad acabada.&nbsp; (O su actividad no absolutamente acabada pero a√∫n √∫til). </li>
</ul>
<p />
			</p></div>
			</div> 
			</td>
			</tr>
		</table>
		</div>
<!-- Piwik -->
<a href="http://piwik.org" title="Web analytics" onclick="window.open(this.href);return(false);">
<script language="javascript" src="http://adam.engagetv.com/piwik/piwik.js" type="text/javascript"></script>
<script type="text/javascript">
<!--
piwik_action_name = '';
piwik_idsite = 1;
piwik_url = 'http://adam.engagetv.com/piwik/piwik.php';
piwik_log(piwik_action_name, piwik_idsite, piwik_url);
//-->
</script>
<!-- /Piwik --> 
</body>
</html>
